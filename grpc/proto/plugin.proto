syntax = "proto3";
import "google/protobuf/timestamp.proto";
package proto;
option go_package = ".;proto";

service WrapperPlugin {
  rpc EstablishMessageStream(EstablishMessageStreamRequest) returns (stream PluginMessage);
  rpc GetSchema(GetSchemaRequest) returns (GetSchemaResponse);
  rpc Execute(ExecuteRequest) returns (stream ExecuteResponse);
  rpc SetConnectionConfig(SetConnectionConfigRequest) returns (SetConnectionConfigResponse);
  rpc SetAllConnectionConfigs(SetAllConnectionConfigsRequest) returns (SetConnectionConfigResponse);
  rpc UpdateConnectionConfigs(UpdateConnectionConfigsRequest) returns (UpdateConnectionConfigsResponse);
  rpc GetSupportedOperations(GetSupportedOperationsRequest) returns (GetSupportedOperationsResponse);
}

message EstablishMessageStreamRequest{
}

message PluginMessage{
  PluginMessageType messageType = 1;
  string connection = 2;
}

enum PluginMessageType {
  NO_STREAM_REQUIRED = 0;
  SCHEMA_UPDATED = 1;
}

message Operator {
  option deprecated = true;
  string name = 1;
  enum Operation {
    ANY = 0;
    ALL = 1;
  }
  Operation operation= 2;
}

message Qual {
  string fieldName = 1;
  oneof operator{
    string string_value = 2;
    Operator tuple_value = 3[deprecated=true];
  }
  QualValue value = 4;
}

message QualValueList {
  repeated QualValue values = 1;

}

message QualValue {
  oneof value{
    string string_value = 1;
    int64 int64_value = 2;
    double double_value = 3;
    bool bool_value = 4;
    Inet inet_value = 5;
    string jsonb_value = 6;
    google.protobuf.Timestamp timestamp_value = 7;
    QualValueList list_value = 8;
    string ltree_value = 9;
  }
}

message Inet {
  int32 mask = 1;
  string addr = 2;
  string cidr = 3;
  string protocol_version = 4;
}

message Quals {
  repeated Qual quals = 1;
}

message QueryContext {
  repeated string columns = 1;
  map<string, Quals> quals = 2;
  NullableInt limit = 3 [deprecated = true];
}

message NullableInt {
  int64 value=1;
}

message TraceContext {
  string value = 1;
}

message ExecuteRequest {
  string table = 1;
  QueryContext query_context = 2;
  string connection = 3 [deprecated = true];
  bool cache_enabled = 4 [deprecated = true];
  int64 cache_ttl = 5 [deprecated = true];
  string call_id = 6;
  TraceContext trace_context = 7;
  map<string, ExecuteConnectionData> executeConnectionData = 8;
}

message ExecuteConnectionData {
  NullableInt limit = 2;
  bool cache_enabled = 3;
  int64 cache_ttl = 4;

}

message ExecuteResponse {
  Row row = 1;
  QueryMetadata metadata = 2;
  string connection = 3;
}

message QueryMetadata {
  int64 hydrate_calls = 1;
  int64 rows_fetched = 2;
  bool cache_hit = 3;
}

message GetSchemaRequest {
  string connection = 1;
}

message GetSchemaResponse {
  Schema schema = 1;
}

message GetSupportedOperationsRequest{}

message GetSupportedOperationsResponse{
  bool query_cache = 1;
  bool multiple_connections = 2;
}

message SetConnectionConfigRequest{
  option deprecated = true;
  string connection_name = 1;
  string connection_config = 2;
}

message ConnectionConfigPayload{
  string connection_name = 1;
  string connection_config = 2;
}

message SetAllConnectionConfigsRequest{
  repeated ConnectionConfig configs = 1;
  int64 max_cache_size_mb = 2;
}

message UpdateConnectionConfigsRequest{
  repeated ConnectionConfig added = 1;
  repeated ConnectionConfig deleted = 2;
  repeated ConnectionConfig changed = 3;
}


message ConnectionConfig {
  string connection = 1;
  string plugin = 2;
  string plugin_short_name = 3;
  string config = 4;
  repeated string child_connections = 5;
}

message SetConnectionConfigResponse{}
message UpdateConnectionConfigsResponse{}

message Row {
  map<string, Column> columns = 1;
}

message TableSchema
{
  repeated ColumnDefinition columns = 1;
  string description = 2;
  KeyColumnsSet getCallKeyColumns = 3 [deprecated=true];
  KeyColumnsSet listCallKeyColumns = 4 [deprecated=true];
  KeyColumnsSet listCallOptionalKeyColumns = 5 [deprecated=true];

  repeated KeyColumn getCallKeyColumnList = 6;
  repeated KeyColumn listCallKeyColumnList = 7;
}

// a set of Key Columns, required for get/list calls
// deprecated - kept for compatibility
message KeyColumnsSet
{
  option deprecated = true;
  string single = 1;
  repeated string all = 2;
  repeated string any = 3;
}

message KeyColumn
{
  string name = 1;
  repeated string operators = 2;
  string require=3;
  string cache_match=4;
}

message Schema {
  map<string, TableSchema> schema = 1;
  string sdk_version = 2;
  int64 protocol_version = 3;
  string mode = 4;
}

message Column {
  oneof value {
    // Represents a null value.
    NullValue null_value = 2;
    // Represents a double value.
    double double_value = 3;
    // Represents an int value
    int64 int_value = 4;
    // Represents a string value.
    string string_value = 5;
    // Represents a boolean value.
    bool bool_value = 6;
    // JSON string
    bytes json_value = 7;
    // Represents a datetime value
    google.protobuf.Timestamp timestamp_value = 8;
    // Represents an ip address value
    string ip_addr_value = 9;
    // Represents an cidr range value
    string cidr_range_value = 10;
    // Represents an ltree value
    string ltree_value = 11;
  }
}

// `NullValue` is a singleton enumeration to represent the null value for the
// `Value` type union.
//
//  The JSON representation for `NullValue` is JSON `null`.
enum NullValue {
  // Null value.
  NULL_VALUE = 0;
}

message ColumnDefinition {
  string name = 1;
  ColumnType type = 2;
  string description = 3;
}

enum ColumnType {
  BOOL = 0;
  INT = 1;
  DOUBLE = 2;
  STRING = 3;
  JSON = 4;
  // Deprecated: ColumnType_DATETIME is deprecated. Instead, use ColumnType_TIMESTAMP
  DATETIME = 5;
  IPADDR = 6;
  CIDR = 7;
  TIMESTAMP = 8;
  INET = 9;
  LTREE = 10;
  UNKNOWN = -1;
}
//
//enum CacheCommand {
//  GET_INDEX = 0;
//  GET_RESULT = 1;
//  SET_INDEX = 2;
//  SET_RESULT_START = 3;
//  SET_RESULT_ITERATE = 4;
//  SET_RESULT_END = 5;
//  SET_RESULT_ABORT = 6;
//  DELETE_INDEX = 7;
//  DELETE_RESULT = 8;
//}
//
//message CacheRequest{
//  CacheCommand command = 1;
//  string key = 2;
//  int64 ttl=3;
//  // for SetIndex command only
//  IndexBucket indexBucket = 4;
//  // for SET_RESULT_ITERATE command only
//  QueryResult result = 6;
//  // unique id - returned from SET_RESULT_START and passed with SET_RESULT_ITERATE and  SET_RESULT_END
//  string callId = 7;
//}
//
//message CacheResponse{
//  // For Get* commands this represents whether a cache hit occurred
//  // For Set* commands this represents whether the set was successful
//  bool success = 1;
//  string error = 2;
//  // for GetIndex command only
//  IndexBucket indexBucket = 3;
//  // for GetResult command only
//  QueryResult query_result = 4;
//  // unique id - returned from SET_RESULT_START
//  string callId = 5;
//}

message QueryResult{
  repeated Row rows = 1;
}

message IndexBucket{
  repeated IndexItem items = 1;
}

message IndexItem{
  string  Key=1;
  map<string, Quals> quals = 3;
  repeated string columns=4;
  int64 limit = 5;
  int64 page_count = 6;
  google.protobuf.Timestamp insertion_time =7;
}